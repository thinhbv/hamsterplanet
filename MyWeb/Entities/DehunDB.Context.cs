//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyWeb.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class dehunEntities : DbContext
    {
        public dehunEntities()
            : base("name=dehunEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Advertise> Advertises { get; set; }
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<CommentNew> CommentNews { get; set; }
        public virtual DbSet<Config> Configs { get; set; }
        public virtual DbSet<Contact> Contacts { get; set; }
        public virtual DbSet<GroupImage> GroupImages { get; set; }
        public virtual DbSet<GroupNew> GroupNews { get; set; }
        public virtual DbSet<GroupProduct> GroupProducts { get; set; }
        public virtual DbSet<Images> Images1 { get; set; }
        public virtual DbSet<News> News { get; set; }
        public virtual DbSet<Order_Detail> Order_Detail { get; set; }
        public virtual DbSet<Order> Orders { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Support> Supports { get; set; }
        public virtual DbSet<Tag> Tags { get; set; }
        public virtual DbSet<TB_ThongKe> TB_ThongKe { get; set; }
        public virtual DbSet<User> Users { get; set; }
    
        public virtual int sp_Advertise_Delete(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Advertise_GetByAll_Result> sp_Advertise_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetByAll_Result>("sp_Advertise_GetByAll");
        }
    
        public virtual ObjectResult<sp_Advertise_GetById_Result> sp_Advertise_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Advertise_GetById_Result>("sp_Advertise_GetById", idParameter);
        }
    
        public virtual int sp_Advertise_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Advertise_Insert(string name, string image, Nullable<int> width, Nullable<int> height, string link, string target, string content, Nullable<short> position, Nullable<int> pageId, Nullable<int> click, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(short));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Insert", nameParameter, imageParameter, widthParameter, heightParameter, linkParameter, targetParameter, contentParameter, positionParameter, pageIdParameter, clickParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Advertise_Update(Nullable<int> id, string name, string image, Nullable<int> width, Nullable<int> height, string link, string target, string content, Nullable<short> position, Nullable<int> pageId, Nullable<int> click, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(short));
    
            var pageIdParameter = pageId.HasValue ?
                new ObjectParameter("PageId", pageId) :
                new ObjectParameter("PageId", typeof(int));
    
            var clickParameter = click.HasValue ?
                new ObjectParameter("Click", click) :
                new ObjectParameter("Click", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Advertise_Update", idParameter, nameParameter, imageParameter, widthParameter, heightParameter, linkParameter, targetParameter, contentParameter, positionParameter, pageIdParameter, clickParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_CommentNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_CommentNews_GetByAll_Result> sp_CommentNews_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommentNews_GetByAll_Result>("sp_CommentNews_GetByAll");
        }
    
        public virtual ObjectResult<sp_CommentNews_GetById_Result> sp_CommentNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_CommentNews_GetById_Result>("sp_CommentNews_GetById", idParameter);
        }
    
        public virtual int sp_CommentNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_CommentNews_Insert(string name, Nullable<System.DateTime> address, string email, string level, string detail, Nullable<int> newsID, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address.HasValue ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentNews_Insert", nameParameter, addressParameter, emailParameter, levelParameter, detailParameter, newsIDParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_CommentNews_Update(Nullable<int> id, string name, Nullable<System.DateTime> address, string email, string level, string detail, Nullable<int> newsID, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address.HasValue ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(System.DateTime));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var newsIDParameter = newsID.HasValue ?
                new ObjectParameter("NewsID", newsID) :
                new ObjectParameter("NewsID", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_CommentNews_Update", idParameter, nameParameter, addressParameter, emailParameter, levelParameter, detailParameter, newsIDParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Config_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Config_GetByAll_Result> sp_Config_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetByAll_Result>("sp_Config_GetByAll");
        }
    
        public virtual ObjectResult<sp_Config_GetById_Result> sp_Config_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Config_GetById_Result>("sp_Config_GetById", idParameter);
        }
    
        public virtual int sp_Config_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Config_Insert(string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string contact, string copyright, string title, string description, string keyword)
        {
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Insert", mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, contactParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter);
        }
    
        public virtual int sp_Config_Update(Nullable<int> id, string mail_Smtp, Nullable<short> mail_Port, string mail_Info, string mail_Noreply, string mail_Password, string contact, string copyright, string title, string description, string keyword)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var mail_SmtpParameter = mail_Smtp != null ?
                new ObjectParameter("Mail_Smtp", mail_Smtp) :
                new ObjectParameter("Mail_Smtp", typeof(string));
    
            var mail_PortParameter = mail_Port.HasValue ?
                new ObjectParameter("Mail_Port", mail_Port) :
                new ObjectParameter("Mail_Port", typeof(short));
    
            var mail_InfoParameter = mail_Info != null ?
                new ObjectParameter("Mail_Info", mail_Info) :
                new ObjectParameter("Mail_Info", typeof(string));
    
            var mail_NoreplyParameter = mail_Noreply != null ?
                new ObjectParameter("Mail_Noreply", mail_Noreply) :
                new ObjectParameter("Mail_Noreply", typeof(string));
    
            var mail_PasswordParameter = mail_Password != null ?
                new ObjectParameter("Mail_Password", mail_Password) :
                new ObjectParameter("Mail_Password", typeof(string));
    
            var contactParameter = contact != null ?
                new ObjectParameter("Contact", contact) :
                new ObjectParameter("Contact", typeof(string));
    
            var copyrightParameter = copyright != null ?
                new ObjectParameter("Copyright", copyright) :
                new ObjectParameter("Copyright", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Config_Update", idParameter, mail_SmtpParameter, mail_PortParameter, mail_InfoParameter, mail_NoreplyParameter, mail_PasswordParameter, contactParameter, copyrightParameter, titleParameter, descriptionParameter, keywordParameter);
        }
    
        public virtual int sp_Contact_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Contact_GetByAll_Result> sp_Contact_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetByAll_Result>("sp_Contact_GetByAll");
        }
    
        public virtual ObjectResult<sp_Contact_GetById_Result> sp_Contact_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Contact_GetById_Result>("sp_Contact_GetById", idParameter);
        }
    
        public virtual int sp_Contact_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Contact_Insert(string name, string company, string email, string phone, string website, string title, string detail, Nullable<System.DateTime> date)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Insert", nameParameter, companyParameter, emailParameter, phoneParameter, websiteParameter, titleParameter, detailParameter, dateParameter);
        }
    
        public virtual int sp_Contact_Update(Nullable<int> id, string name, string company, string email, string phone, string website, string title, string detail, Nullable<System.DateTime> date)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Contact_Update", idParameter, nameParameter, companyParameter, emailParameter, phoneParameter, websiteParameter, titleParameter, detailParameter, dateParameter);
        }
    
        public virtual int sp_GroupImages_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupImages_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupImages_GetByAll_Result> sp_GroupImages_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupImages_GetByAll_Result>("sp_GroupImages_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupImages_GetById_Result> sp_GroupImages_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupImages_GetById_Result>("sp_GroupImages_GetById", idParameter);
        }
    
        public virtual int sp_GroupImages_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupImages_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupImages_Insert(string name, string level, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupImages_Insert", nameParameter, levelParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_GroupImages_Update(Nullable<int> id, string name, string level, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupImages_Update", idParameter, nameParameter, levelParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_GroupNews_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupNews_GetByAll_Result> sp_GroupNews_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetByAll_Result>("sp_GroupNews_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupNews_GetById_Result> sp_GroupNews_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupNews_GetById_Result>("sp_GroupNews_GetById", idParameter);
        }
    
        public virtual int sp_GroupNews_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupNews_Insert(string name, string image, string level, string description, string keyword, Nullable<int> ord, Nullable<int> active, Nullable<int> index)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Insert", nameParameter, imageParameter, levelParameter, descriptionParameter, keywordParameter, ordParameter, activeParameter, indexParameter);
        }
    
        public virtual int sp_GroupNews_Update(Nullable<int> id, string name, string image, string level, string description, string keyword, Nullable<int> ord, Nullable<int> active, Nullable<int> index)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupNews_Update", idParameter, nameParameter, imageParameter, levelParameter, descriptionParameter, keywordParameter, ordParameter, activeParameter, indexParameter);
        }
    
        public virtual int sp_GroupProduct_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetByAll_Result> sp_GroupProduct_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetByAll_Result>("sp_GroupProduct_GetByAll");
        }
    
        public virtual ObjectResult<sp_GroupProduct_GetById_Result> sp_GroupProduct_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GroupProduct_GetById_Result>("sp_GroupProduct_GetById", idParameter);
        }
    
        public virtual int sp_GroupProduct_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_GroupProduct_Insert(string name, string image, string level, Nullable<byte> position, Nullable<int> ord, Nullable<int> active, Nullable<byte> items, string description, string keywords, Nullable<byte> priority)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(byte));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var itemsParameter = items.HasValue ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(byte));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Insert", nameParameter, imageParameter, levelParameter, positionParameter, ordParameter, activeParameter, itemsParameter, descriptionParameter, keywordsParameter, priorityParameter);
        }
    
        public virtual int sp_GroupProduct_Update(Nullable<int> id, string name, string image, string level, Nullable<byte> position, Nullable<int> ord, Nullable<int> active, Nullable<byte> items, string description, string keywords, Nullable<byte> priority)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var positionParameter = position.HasValue ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(byte));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            var itemsParameter = items.HasValue ?
                new ObjectParameter("Items", items) :
                new ObjectParameter("Items", typeof(byte));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_GroupProduct_Update", idParameter, nameParameter, imageParameter, levelParameter, positionParameter, ordParameter, activeParameter, itemsParameter, descriptionParameter, keywordsParameter, priorityParameter);
        }
    
        public virtual int sp_Images_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Images_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Images_GetByAll_Result> sp_Images_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Images_GetByAll_Result>("sp_Images_GetByAll");
        }
    
        public virtual ObjectResult<sp_Images_GetById_Result> sp_Images_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Images_GetById_Result>("sp_Images_GetById", idParameter);
        }
    
        public virtual int sp_Images_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Images_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Images_Insert(string thumbnail, string image, Nullable<int> groupId, Nullable<int> priority, Nullable<int> ord, Nullable<int> active)
        {
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("Thumbnail", thumbnail) :
                new ObjectParameter("Thumbnail", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Images_Insert", thumbnailParameter, imageParameter, groupIdParameter, priorityParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Images_Update(Nullable<int> id, string thumbnail, string image, Nullable<int> groupId, Nullable<int> priority, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("Thumbnail", thumbnail) :
                new ObjectParameter("Thumbnail", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Images_Update", idParameter, thumbnailParameter, imageParameter, groupIdParameter, priorityParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_News_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_News_GetByAll_Result> sp_News_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetByAll_Result>("sp_News_GetByAll");
        }
    
        public virtual ObjectResult<sp_News_GetById_Result> sp_News_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_News_GetById_Result>("sp_News_GetById", idParameter);
        }
    
        public virtual int sp_News_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_News_GetCount(string level)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_News_GetCount", levelParameter);
        }
    
        public virtual int sp_News_Insert(string name, string image, string file, string content, string detail, Nullable<System.DateTime> date, Nullable<int> priority, Nullable<int> index, Nullable<int> views, Nullable<int> groupNewsId, string groupName, string linkDemo, string description, string keyword, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            var viewsParameter = views.HasValue ?
                new ObjectParameter("Views", views) :
                new ObjectParameter("Views", typeof(int));
    
            var groupNewsIdParameter = groupNewsId.HasValue ?
                new ObjectParameter("GroupNewsId", groupNewsId) :
                new ObjectParameter("GroupNewsId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var linkDemoParameter = linkDemo != null ?
                new ObjectParameter("LinkDemo", linkDemo) :
                new ObjectParameter("LinkDemo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Insert", nameParameter, imageParameter, fileParameter, contentParameter, detailParameter, dateParameter, priorityParameter, indexParameter, viewsParameter, groupNewsIdParameter, groupNameParameter, linkDemoParameter, descriptionParameter, keywordParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_News_Update(Nullable<int> id, string name, string image, string file, string content, string detail, Nullable<System.DateTime> date, Nullable<int> priority, Nullable<int> index, Nullable<int> views, Nullable<int> groupNewsId, string groupName, string linkDemo, string description, string keyword, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var fileParameter = file != null ?
                new ObjectParameter("File", file) :
                new ObjectParameter("File", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var indexParameter = index.HasValue ?
                new ObjectParameter("Index", index) :
                new ObjectParameter("Index", typeof(int));
    
            var viewsParameter = views.HasValue ?
                new ObjectParameter("Views", views) :
                new ObjectParameter("Views", typeof(int));
    
            var groupNewsIdParameter = groupNewsId.HasValue ?
                new ObjectParameter("GroupNewsId", groupNewsId) :
                new ObjectParameter("GroupNewsId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var linkDemoParameter = linkDemo != null ?
                new ObjectParameter("LinkDemo", linkDemo) :
                new ObjectParameter("LinkDemo", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_News_Update", idParameter, nameParameter, imageParameter, fileParameter, contentParameter, detailParameter, dateParameter, priorityParameter, indexParameter, viewsParameter, groupNewsIdParameter, groupNameParameter, linkDemoParameter, descriptionParameter, keywordParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_OrderDetail_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_OrderDetail_GetById_Result> sp_OrderDetail_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_OrderDetail_GetById_Result>("sp_OrderDetail_GetById", idParameter);
        }
    
        public virtual int sp_OrderDetail_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_OrderDetail_Insert(Nullable<int> orderId, Nullable<int> productId, string productName, string productImage, string price, string size, Nullable<int> quantity)
        {
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Insert", orderIdParameter, productIdParameter, productNameParameter, productImageParameter, priceParameter, sizeParameter, quantityParameter);
        }
    
        public virtual int sp_OrderDetail_Update(Nullable<int> id, Nullable<int> orderId, Nullable<int> productId, string productName, string productImage, string price, string size, Nullable<int> quantity)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var orderIdParameter = orderId.HasValue ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var sizeParameter = size != null ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_OrderDetail_Update", idParameter, orderIdParameter, productIdParameter, productNameParameter, productImageParameter, priceParameter, sizeParameter, quantityParameter);
        }
    
        public virtual int sp_Orders_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Orders_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Orders_GetById_Result> sp_Orders_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Orders_GetById_Result>("sp_Orders_GetById", idParameter);
        }
    
        public virtual int sp_Orders_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Orders_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Orders_Insert(string orderId, string name, string address, string tel, string email, Nullable<byte> paymentMethod, Nullable<byte> status, Nullable<System.DateTime> orderDate, string price, string detail, Nullable<System.DateTime> deliveryDate)
        {
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var paymentMethodParameter = paymentMethod.HasValue ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(byte));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Orders_Insert", orderIdParameter, nameParameter, addressParameter, telParameter, emailParameter, paymentMethodParameter, statusParameter, orderDateParameter, priceParameter, detailParameter, deliveryDateParameter);
        }
    
        public virtual int sp_Orders_Update(Nullable<int> id, string orderId, string name, string address, string tel, string email, Nullable<byte> paymentMethod, Nullable<byte> status, Nullable<System.DateTime> orderDate, string price, string detail, Nullable<System.DateTime> deliveryDate)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var orderIdParameter = orderId != null ?
                new ObjectParameter("OrderId", orderId) :
                new ObjectParameter("OrderId", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var telParameter = tel != null ?
                new ObjectParameter("Tel", tel) :
                new ObjectParameter("Tel", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var paymentMethodParameter = paymentMethod.HasValue ?
                new ObjectParameter("PaymentMethod", paymentMethod) :
                new ObjectParameter("PaymentMethod", typeof(byte));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Orders_Update", idParameter, orderIdParameter, nameParameter, addressParameter, telParameter, emailParameter, paymentMethodParameter, statusParameter, orderDateParameter, priceParameter, detailParameter, deliveryDateParameter);
        }
    
        public virtual int sp_Page_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Page_GetByAll_Result> sp_Page_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_GetByAll_Result>("sp_Page_GetByAll");
        }
    
        public virtual ObjectResult<sp_Page_GetById_Result> sp_Page_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Page_GetById_Result>("sp_Page_GetById", idParameter);
        }
    
        public virtual int sp_Page_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Page_Insert(string name, string image, string detail, string level, string description, string keyword, Nullable<int> type, string link, string target, string position, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Insert", nameParameter, imageParameter, detailParameter, levelParameter, descriptionParameter, keywordParameter, typeParameter, linkParameter, targetParameter, positionParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Page_Update(Nullable<int> id, string name, string image, string detail, string level, string description, string keyword, Nullable<int> type, string link, string target, string position, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var targetParameter = target != null ?
                new ObjectParameter("Target", target) :
                new ObjectParameter("Target", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Page_Update", idParameter, nameParameter, imageParameter, detailParameter, levelParameter, descriptionParameter, keywordParameter, typeParameter, linkParameter, targetParameter, positionParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Product_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetByAll_Result> sp_Product_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetByAll_Result>("sp_Product_GetByAll");
        }
    
        public virtual ObjectResult<sp_Product_GetById_Result> sp_Product_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetById_Result>("sp_Product_GetById", idParameter);
        }
    
        public virtual int sp_Product_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> sp_Product_GetCount(string level)
        {
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("sp_Product_GetCount", levelParameter);
        }
    
        public virtual ObjectResult<sp_Product_GetCountByGroupId_Result> sp_Product_GetCountByGroupId()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Product_GetCountByGroupId_Result>("sp_Product_GetCountByGroupId");
        }
    
        public virtual int sp_Product_Insert(string name, string image1, string image2, string image3, string image4, string image5, string content, string detail, string price, Nullable<int> groupId, string groupName, Nullable<int> isPopular, Nullable<int> isNew, Nullable<int> isHot, Nullable<int> isSpecial, string keywords, string description, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("Image1", image1) :
                new ObjectParameter("Image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            var image3Parameter = image3 != null ?
                new ObjectParameter("Image3", image3) :
                new ObjectParameter("Image3", typeof(string));
    
            var image4Parameter = image4 != null ?
                new ObjectParameter("Image4", image4) :
                new ObjectParameter("Image4", typeof(string));
    
            var image5Parameter = image5 != null ?
                new ObjectParameter("Image5", image5) :
                new ObjectParameter("Image5", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var isPopularParameter = isPopular.HasValue ?
                new ObjectParameter("IsPopular", isPopular) :
                new ObjectParameter("IsPopular", typeof(int));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(int));
    
            var isHotParameter = isHot.HasValue ?
                new ObjectParameter("IsHot", isHot) :
                new ObjectParameter("IsHot", typeof(int));
    
            var isSpecialParameter = isSpecial.HasValue ?
                new ObjectParameter("IsSpecial", isSpecial) :
                new ObjectParameter("IsSpecial", typeof(int));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Insert", nameParameter, image1Parameter, image2Parameter, image3Parameter, image4Parameter, image5Parameter, contentParameter, detailParameter, priceParameter, groupIdParameter, groupNameParameter, isPopularParameter, isNewParameter, isHotParameter, isSpecialParameter, keywordsParameter, descriptionParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Product_Update(Nullable<int> id, string name, string image1, string image2, string image3, string image4, string image5, string content, string detail, string price, Nullable<int> groupId, string groupName, Nullable<int> isPopular, Nullable<int> isNew, Nullable<int> isHot, Nullable<int> isSpecial, string keywords, string description, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var image1Parameter = image1 != null ?
                new ObjectParameter("Image1", image1) :
                new ObjectParameter("Image1", typeof(string));
    
            var image2Parameter = image2 != null ?
                new ObjectParameter("Image2", image2) :
                new ObjectParameter("Image2", typeof(string));
    
            var image3Parameter = image3 != null ?
                new ObjectParameter("Image3", image3) :
                new ObjectParameter("Image3", typeof(string));
    
            var image4Parameter = image4 != null ?
                new ObjectParameter("Image4", image4) :
                new ObjectParameter("Image4", typeof(string));
    
            var image5Parameter = image5 != null ?
                new ObjectParameter("Image5", image5) :
                new ObjectParameter("Image5", typeof(string));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var detailParameter = detail != null ?
                new ObjectParameter("Detail", detail) :
                new ObjectParameter("Detail", typeof(string));
    
            var priceParameter = price != null ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(string));
    
            var groupIdParameter = groupId.HasValue ?
                new ObjectParameter("GroupId", groupId) :
                new ObjectParameter("GroupId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var isPopularParameter = isPopular.HasValue ?
                new ObjectParameter("IsPopular", isPopular) :
                new ObjectParameter("IsPopular", typeof(int));
    
            var isNewParameter = isNew.HasValue ?
                new ObjectParameter("IsNew", isNew) :
                new ObjectParameter("IsNew", typeof(int));
    
            var isHotParameter = isHot.HasValue ?
                new ObjectParameter("IsHot", isHot) :
                new ObjectParameter("IsHot", typeof(int));
    
            var isSpecialParameter = isSpecial.HasValue ?
                new ObjectParameter("IsSpecial", isSpecial) :
                new ObjectParameter("IsSpecial", typeof(int));
    
            var keywordsParameter = keywords != null ?
                new ObjectParameter("Keywords", keywords) :
                new ObjectParameter("Keywords", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Product_Update", idParameter, nameParameter, image1Parameter, image2Parameter, image3Parameter, image4Parameter, image5Parameter, contentParameter, detailParameter, priceParameter, groupIdParameter, groupNameParameter, isPopularParameter, isNewParameter, isHotParameter, isSpecialParameter, keywordsParameter, descriptionParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Support_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_Support_GetByAll_Result> sp_Support_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetByAll_Result>("sp_Support_GetByAll");
        }
    
        public virtual ObjectResult<sp_Support_GetById_Result> sp_Support_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Support_GetById_Result>("sp_Support_GetById", idParameter);
        }
    
        public virtual int sp_Support_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Support_Insert(string name, string email, string phone, string nick, string skype, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var skypeParameter = skype != null ?
                new ObjectParameter("Skype", skype) :
                new ObjectParameter("Skype", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Insert", nameParameter, emailParameter, phoneParameter, nickParameter, skypeParameter, activeParameter);
        }
    
        public virtual int sp_Support_Update(Nullable<int> id, string name, string email, string phone, string nick, string skype, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var nickParameter = nick != null ?
                new ObjectParameter("Nick", nick) :
                new ObjectParameter("Nick", typeof(string));
    
            var skypeParameter = skype != null ?
                new ObjectParameter("Skype", skype) :
                new ObjectParameter("Skype", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Support_Update", idParameter, nameParameter, emailParameter, phoneParameter, nickParameter, skypeParameter, activeParameter);
        }
    
        public virtual ObjectResult<sp_Tags_GetByAll_Result> sp_Tags_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Tags_GetByAll_Result>("sp_Tags_GetByAll");
        }
    
        public virtual ObjectResult<sp_Tags_GetById_Result> sp_Tags_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Tags_GetById_Result>("sp_Tags_GetById", idParameter);
        }
    
        public virtual int sp_Tags_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Tags_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_Tags_Insert(string name, string title, string link, Nullable<int> ord, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Tags_Insert", nameParameter, titleParameter, linkParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_Tags_Update(Nullable<int> id, string name, string title, string link, Nullable<int> ord, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var linkParameter = link != null ?
                new ObjectParameter("Link", link) :
                new ObjectParameter("Link", typeof(string));
    
            var ordParameter = ord.HasValue ?
                new ObjectParameter("Ord", ord) :
                new ObjectParameter("Ord", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Tags_Update", idParameter, nameParameter, titleParameter, linkParameter, ordParameter, activeParameter);
        }
    
        public virtual int sp_User_Delete(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Delete", idParameter);
        }
    
        public virtual ObjectResult<sp_User_GetByAll_Result> sp_User_GetByAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetByAll_Result>("sp_User_GetByAll");
        }
    
        public virtual ObjectResult<sp_User_GetById_Result> sp_User_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_User_GetById_Result>("sp_User_GetById", idParameter);
        }
    
        public virtual int sp_User_GetByTop(string top, string where, string order)
        {
            var topParameter = top != null ?
                new ObjectParameter("Top", top) :
                new ObjectParameter("Top", typeof(string));
    
            var whereParameter = where != null ?
                new ObjectParameter("Where", where) :
                new ObjectParameter("Where", typeof(string));
    
            var orderParameter = order != null ?
                new ObjectParameter("Order", order) :
                new ObjectParameter("Order", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_GetByTop", topParameter, whereParameter, orderParameter);
        }
    
        public virtual int sp_User_Insert(string name, string userName, string password, string email, string phone, Nullable<System.DateTime> date, Nullable<int> admin, Nullable<int> active)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Insert", nameParameter, userNameParameter, passwordParameter, emailParameter, phoneParameter, dateParameter, adminParameter, activeParameter);
        }
    
        public virtual int sp_User_Update(Nullable<int> id, string name, string userName, string password, string email, string phone, Nullable<System.DateTime> date, Nullable<int> admin, Nullable<int> active)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var adminParameter = admin.HasValue ?
                new ObjectParameter("Admin", admin) :
                new ObjectParameter("Admin", typeof(int));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_User_Update", idParameter, nameParameter, userNameParameter, passwordParameter, emailParameter, phoneParameter, dateParameter, adminParameter, activeParameter);
        }
    
        public virtual ObjectResult<spNews_PhanTrang_Result> spNews_PhanTrang(Nullable<int> currPage, Nullable<int> recodperpage, string level)
        {
            var currPageParameter = currPage.HasValue ?
                new ObjectParameter("currPage", currPage) :
                new ObjectParameter("currPage", typeof(int));
    
            var recodperpageParameter = recodperpage.HasValue ?
                new ObjectParameter("recodperpage", recodperpage) :
                new ObjectParameter("recodperpage", typeof(int));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spNews_PhanTrang_Result>("spNews_PhanTrang", currPageParameter, recodperpageParameter, levelParameter);
        }
    
        public virtual ObjectResult<spProduct_PhanTrang_Result> spProduct_PhanTrang(Nullable<int> currPage, Nullable<int> recodperpage, string level)
        {
            var currPageParameter = currPage.HasValue ?
                new ObjectParameter("currPage", currPage) :
                new ObjectParameter("currPage", typeof(int));
    
            var recodperpageParameter = recodperpage.HasValue ?
                new ObjectParameter("recodperpage", recodperpage) :
                new ObjectParameter("recodperpage", typeof(int));
    
            var levelParameter = level != null ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProduct_PhanTrang_Result>("spProduct_PhanTrang", currPageParameter, recodperpageParameter, levelParameter);
        }
    
        public virtual ObjectResult<spProductSearch_Paging_Result> spProductSearch_Paging(Nullable<int> currPage, Nullable<int> recodperpage, string keyword)
        {
            var currPageParameter = currPage.HasValue ?
                new ObjectParameter("currPage", currPage) :
                new ObjectParameter("currPage", typeof(int));
    
            var recodperpageParameter = recodperpage.HasValue ?
                new ObjectParameter("recodperpage", recodperpage) :
                new ObjectParameter("recodperpage", typeof(int));
    
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spProductSearch_Paging_Result>("spProductSearch_Paging", currPageParameter, recodperpageParameter, keywordParameter);
        }
    
        public virtual ObjectResult<spThongKe_Edit_Result> spThongKe_Edit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spThongKe_Edit_Result>("spThongKe_Edit");
        }
    }
}
